!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/wf/.local/share/nvim/PL/skim4vim/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
<Plug>(-fzf-complete-trigger)	autoload/fzf/vim.vim	/^    ino      <silent> <Plug>(-fzf-complete-trigger)   <c-o>:call <sid>complete_trigger()<cr>$/;"	m
<plug>(-fzf-/)	autoload/fzf/vim.vim	/^    nno      <plug>(-fzf-\/) \/$/;"	m
<plug>(-fzf-:)	autoload/fzf/vim.vim	/^    nno      <plug>(-fzf-:) :$/;"	m
<plug>(-fzf-vim-do)	autoload/fzf/vim.vim	/^    nno      <plug>(-fzf-vim-do) :execute g:__fzf_command<cr>$/;"	m
<plug>(fzf-complete-buffer-line)	plugin/fzf.vim	/^ino      <expr> <plug>(fzf-complete-buffer-line) fzf#vim#complete#buffer_line()$/;"	m
<plug>(fzf-complete-file)	plugin/fzf.vim	/^    ino      <expr> <plug>(fzf-complete-file)      fzf#vim#complete#path("find . -path '*\/\\.*'/;"	m
<plug>(fzf-complete-file)	plugin/fzf.vim	/^    ino      <expr> <plug>(fzf-complete-file)      fzf#vim#complete#path('dir \/s\/b\/a:-d')$/;"	m
<plug>(fzf-complete-file-ag)	plugin/fzf.vim	/^ino      <expr> <plug>(fzf-complete-file-ag)     fzf#vim#complete#path('ag -l -g ""')$/;"	m
<plug>(fzf-complete-line)	plugin/fzf.vim	/^ino      <expr> <plug>(fzf-complete-line)        fzf#vim#complete#line()$/;"	m
<plug>(fzf-complete-path)	plugin/fzf.vim	/^    ino      <expr> <plug>(fzf-complete-path)      fzf#vim#complete#path("find . -path '*\/\\.*'/;"	m
<plug>(fzf-complete-path)	plugin/fzf.vim	/^    ino      <expr> <plug>(fzf-complete-path)      fzf#vim#complete#path('dir \/s\/b')$/;"	m
<plug>(fzf-complete-word)	plugin/fzf.vim	/^ino      <expr> <plug>(fzf-complete-word)        fzf#vim#complete#word()$/;"	m
<plug>(fzf-maps-i)	plugin/fzf.vim	/^ino      <silent> <plug>(fzf-maps-i) <c-o>:call fzf#vim#maps('i', 0)<cr>$/;"	m
<plug>(fzf-maps-n)	plugin/fzf.vim	/^nno      <silent> <plug>(fzf-maps-n) :<c-u>call fzf#vim#maps('n', 0)<cr>$/;"	m
<plug>(fzf-maps-o)	plugin/fzf.vim	/^onoremap <silent> <plug>(fzf-maps-o) <c-c>:<c-u>call fzf#vim#maps('o', 0)<cr>$/;"	m
<plug>(fzf-maps-x)	plugin/fzf.vim	/^xnoremap <silent> <plug>(fzf-maps-x) :<c-u>call fzf#vim#maps('x', 0)<cr>$/;"	m
Configuration	fzf_vim.md	/^### Configuration$/;"	S	section:SK Vim integration""`:SK[!]`
Examples	fzf_vim.md	/^#### Examples$/;"	t	subsection:SK Vim integration""`:SK[!]`""Configuration
Explanation of `g:fzf_colors`	fzf_vim.md	/^##### Explanation of `g:fzf_colors`$/;"	T	subsubsection:SK Vim integration""`:SK[!]`""Configuration""Examples
Global options supported by `skim#wrap`	fzf_vim.md	/^### Global options supported by `skim#wrap`$/;"	S	section:SK Vim integration""`skim#wrap`
Hide statusline	fzf_vim.md	/^### Hide statusline$/;"	S	section:SK Vim integration""Tips
Installation	fzf_vim.md	/^Installation$/;"	s	chapter:SK Vim integration
SK Vim integration	fzf_vim.md	/^SK Vim integration$/;"	c
Starting fzf in a popup window	fzf_vim.md	/^### Starting fzf in a popup window$/;"	S	section:SK Vim integration""Tips
Summary	fzf_vim.md	/^Summary$/;"	s	chapter:SK Vim integration
Tips	fzf_vim.md	/^Tips$/;"	s	chapter:SK Vim integration
[License](LICENSE)	fzf_vim.md	/^[License](LICENSE)$/;"	s	chapter:SK Vim integration
_fzf_statusline	plugin/fzf.vim	/^    augroup _fzf_statusline$/;"	a
`:SK[!]`	fzf_vim.md	/^`:SK[!]`$/;"	s	chapter:SK Vim integration
`skim#run`	fzf_vim.md	/^`skim#run`$/;"	s	chapter:SK Vim integration
`skim#wrap`	fzf_vim.md	/^`skim#wrap`$/;"	s	chapter:SK Vim integration
fzf inside terminal buffer	fzf_vim.md	/^### fzf inside terminal buffer$/;"	S	section:SK Vim integration""Tips
fzf#complete	plugin/fzf.vim	/^fun! fzf#complete(...)$/;"	f
fzf#vim#_buflisted_sorted	autoload/fzf/vim.vim	/^    fun! fzf#vim#_buflisted_sorted()$/;"	f
fzf#vim#_format_buffer	autoload/fzf/vim.vim	/^    fun! fzf#vim#_format_buffer(b)$/;"	f
fzf#vim#_lines	autoload/fzf/vim.vim	/^    fun! fzf#vim#_lines(all)$/;"	f
fzf#vim#_recent_files	autoload/fzf/vim.vim	/^    fun! fzf#vim#_recent_files()$/;"	f
fzf#vim#_uniq	autoload/fzf/vim.vim	/^    fun! fzf#vim#_uniq(list)$/;"	f
fzf#vim#ag	autoload/fzf/vim.vim	/^        fun! fzf#vim#ag(query, ...)$/;"	f
fzf#vim#ag_interactive	autoload/fzf/vim.vim	/^            fun! fzf#vim#ag_interactive(dir, ...)$/;"	f
fzf#vim#ag_raw	autoload/fzf/vim.vim	/^            fun! fzf#vim#ag_raw(command_suffix, ...)$/;"	f
fzf#vim#buffer_commits	autoload/fzf/vim.vim	/^    fun! fzf#vim#buffer_commits(...)$/;"	f
fzf#vim#buffer_lines	autoload/fzf/vim.vim	/^    fun! fzf#vim#buffer_lines(...)$/;"	f
fzf#vim#buffer_tags	autoload/fzf/vim.vim	/^    fun! fzf#vim#buffer_tags(query, ...)$/;"	f
fzf#vim#buffers	autoload/fzf/vim.vim	/^    fun! fzf#vim#buffers(...)$/;"	f
fzf#vim#colors	autoload/fzf/vim.vim	/^    fun! fzf#vim#colors(...)$/;"	f
fzf#vim#command_history	autoload/fzf/vim.vim	/^    fun! fzf#vim#command_history(...)$/;"	f
fzf#vim#commands	autoload/fzf/vim.vim	/^    fun! fzf#vim#commands(...)$/;"	f
fzf#vim#commits	autoload/fzf/vim.vim	/^    fun! fzf#vim#commits(...)$/;"	f
fzf#vim#complete	autoload/fzf/vim.vim	/^    fun! fzf#vim#complete(...)$/;"	f
fzf#vim#complete#buffer_line	autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#buffer_line(...)$/;"	f
fzf#vim#complete#line	autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#line(...)$/;"	f
fzf#vim#complete#path	autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#path(command, ...)$/;"	f
fzf#vim#complete#word	autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#word(...)$/;"	f
fzf#vim#files	autoload/fzf/vim.vim	/^    fun! fzf#vim#files(dir, ...)$/;"	f
fzf#vim#filetypes	autoload/fzf/vim.vim	/^    fun! fzf#vim#filetypes(...)$/;"	f
fzf#vim#gitfiles	autoload/fzf/vim.vim	/^    fun! fzf#vim#gitfiles(args, ...)$/;"	f
fzf#vim#grep	autoload/fzf/vim.vim	/^                fun! fzf#vim#grep(grep_command, has_column, ...)$/;"	f
fzf#vim#grep_interactive	autoload/fzf/vim.vim	/^        fun! fzf#vim#grep_interactive(command, column_01, ...)$/;"	f
fzf#vim#helptags	autoload/fzf/vim.vim	/^    fun! fzf#vim#helptags(...)$/;"	f
fzf#vim#history	autoload/fzf/vim.vim	/^    fun! fzf#vim#history(...)$/;"	f
fzf#vim#lines	autoload/fzf/vim.vim	/^    fun! fzf#vim#lines(...)$/;"	f
fzf#vim#locate	autoload/fzf/vim.vim	/^    fun! fzf#vim#locate(query, ...)$/;"	f
fzf#vim#maps	autoload/fzf/vim.vim	/^    fun! fzf#vim#maps(mode, ...)$/;"	f
fzf#vim#marks	autoload/fzf/vim.vim	/^    fun! fzf#vim#marks(...)$/;"	f
fzf#vim#rg_interactive	autoload/fzf/vim.vim	/^            fun! fzf#vim#rg_interactive(dir, ...)$/;"	f
fzf#vim#search_history	autoload/fzf/vim.vim	/^    fun! fzf#vim#search_history(...)$/;"	f
fzf#vim#snippets	autoload/fzf/vim.vim	/^    fun! fzf#vim#snippets(...)$/;"	f
fzf#vim#tags	autoload/fzf/vim.vim	/^    fun! fzf#vim#tags(query, ...)$/;"	f
fzf#vim#windows	autoload/fzf/vim.vim	/^    fun! fzf#vim#windows(...)$/;"	f
fzf#vim#with_preview	autoload/fzf/vim.vim	/^    fun! fzf#vim#with_preview(...)$/;"	f
fzf_buffers	plugin/fzf.vim	/^augroup fzf_buffers$/;"	a
g:__fzf_command	autoload/fzf/vim.vim	/^            let g:__fzf_command = "normal ".prefix.item."\\<cr>"$/;"	v
g:fzf#vim#buffers	plugin/fzf.vim	/^    let g:fzf#vim#buffers = {}$/;"	v
opts.sink	autoload/fzf/vim.vim	/^                    fun! opts.sink(lines)$/;"	f
opts.sink	autoload/fzf/vim.vim	/^            fun! opts.sink(lines)$/;"	f
s:TYPE	autoload/fzf/vim.vim	/^    let s:TYPE = {'dict': type({}), 'funcref': type(function('call')), 'string': type(''), 'list/;"	v
s:action_for	autoload/fzf/vim.vim	/^    fun! s:action_for(key, ...)$/;"	f
s:ag_handler	autoload/fzf/vim.vim	/^    fun! s:ag_handler(lines, has_column)$/;"	f
s:ag_to_qf	autoload/fzf/vim.vim	/^    fun! s:ag_to_qf(line, has_column)$/;"	f
s:align_lists	autoload/fzf/vim.vim	/^    fun! s:align_lists(lists)$/;"	f
s:align_pairs	autoload/fzf/vim.vim	/^    fun! s:align_pairs(list)$/;"	f
s:ansi	autoload/fzf/vim.vim	/^    fun! s:ansi(str, group, default, ...)$/;"	f
s:ansi	autoload/fzf/vim.vim	/^    let s:ansi = {'black': 30, 'red': 31, 'green': 32, 'yellow': 33, 'blue': 34, 'magenta': 35, /;"	v
s:bin	autoload/fzf/vim.vim	/^            let s:bin.preview = fnamemodify(s:bin.preview, ':8')$/;"	v
s:bin	autoload/fzf/vim.vim	/^            let s:bin.preview = split(system('for %A in ("'.s:bin.preview.'") do @echo %~sA'), "/;"	v
s:bin	autoload/fzf/vim.vim	/^    let s:bin = {$/;"	v
s:bin_dir	autoload/fzf/vim.vim	/^    let s:bin_dir = expand('<sfile>:p:h:h:h').'\/bin\/'$/;"	v
s:btags_sink	autoload/fzf/vim.vim	/^    fun! s:btags_sink(lines)$/;"	f
s:btags_source	autoload/fzf/vim.vim	/^    fun! s:btags_source(tag_cmds)$/;"	f
s:buffer_line_handler	autoload/fzf/vim.vim	/^    fun! s:buffer_line_handler(lines)$/;"	f
s:buffer_lines	autoload/fzf/vim.vim	/^    fun! s:buffer_lines(query)$/;"	f
s:buflisted	autoload/fzf/vim.vim	/^    fun! s:buflisted()$/;"	f
s:bufopen	autoload/fzf/vim.vim	/^    fun! s:bufopen(lines)$/;"	f
s:check_requirements	autoload/fzf/vim.vim	/^    fun! s:check_requirements()$/;"	f
s:checked	autoload/fzf/vim.vim	/^    let s:checked = 0$/;"	v
s:chomp	autoload/fzf/vim.vim	/^    fun! s:chomp(str)$/;"	f
s:cmd_history_sink	autoload/fzf/vim.vim	/^    fun! s:cmd_history_sink(lines)$/;"	f
s:command_sink	autoload/fzf/vim.vim	/^    fun! s:command_sink(lines)$/;"	f
s:commits	autoload/fzf/vim.vim	/^    fun! s:commits(buffer_local, args)$/;"	f
s:commits_sink	autoload/fzf/vim.vim	/^    fun! s:commits_sink(lines)$/;"	f
s:complete_insert	autoload/fzf/vim.vim	/^    fun! s:complete_insert(lines)$/;"	f
s:complete_trigger	autoload/fzf/vim.vim	/^    fun! s:complete_trigger()$/;"	f
s:cpo_save	autoload/fzf/vim.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	autoload/fzf/vim/complete.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugin/fzf.vim	/^let s:cpo_save = &cpo$/;"	v
s:csi	autoload/fzf/vim.vim	/^    fun! s:csi(color, fg)$/;"	f
s:default_action	autoload/fzf/vim.vim	/^    let s:default_action = {$/;"	v
s:defs	plugin/fzf.vim	/^fun! s:defs(commands)$/;"	f
s:escape	autoload/fzf/vim.vim	/^    fun! s:escape(path)$/;"	f
s:eval	autoload/fzf/vim.vim	/^    fun! s:eval(dict, key, arg)$/;"	f
s:excmds	autoload/fzf/vim.vim	/^    fun! s:excmds()$/;"	f
s:extend	autoload/fzf/vim/complete.vim	/^function! s:extend(base, extra)$/;"	f
s:extend_opts	autoload/fzf/vim.vim	/^    fun! s:extend_opts(dict, eopts, prepend)$/;"	f
s:file_options	autoload/fzf/vim/complete.vim	/^function! s:file_options(prefix)$/;"	f
s:file_source	autoload/fzf/vim/complete.vim	/^function! s:file_source(prefix)$/;"	f
s:file_split_prefix	autoload/fzf/vim/complete.vim	/^function! s:file_split_prefix(prefix)$/;"	f
s:fill_quickfix	autoload/fzf/vim.vim	/^    fun! s:fill_quickfix(list, ...)$/;"	f
s:find_open_window	autoload/fzf/vim.vim	/^    fun! s:find_open_window(b)$/;"	f
s:first_line	autoload/fzf/vim.vim	/^    fun! s:first_line(lines)$/;"	f
s:fmt_excmd	autoload/fzf/vim.vim	/^    let s:fmt_excmd = '   '.s:blue('%-38s', 'Statement').'%s'$/;"	v
s:fname_prefix	autoload/fzf/vim/complete.vim	/^function! s:fname_prefix(str)$/;"	f
s:format_cmd	autoload/fzf/vim.vim	/^    fun! s:format_cmd(line)$/;"	f
s:format_excmd	autoload/fzf/vim.vim	/^    fun! s:format_excmd(ex)$/;"	f
s:format_mark	autoload/fzf/vim.vim	/^    fun! s:format_mark(line)$/;"	f
s:format_win	autoload/fzf/vim.vim	/^    fun! s:format_win(tab, win, buf)$/;"	f
s:function	autoload/fzf/vim.vim	/^        fun! s:function(name)$/;"	f
s:function	autoload/fzf/vim/complete.vim	/^    function! s:function(name)$/;"	f
s:fzf	autoload/fzf/vim.vim	/^    fun! s:fzf(name, opts, extra)$/;"	f
s:fzf_restore_colors	plugin/fzf.vim	/^    fun! s:fzf_restore_colors()$/;"	f
s:fzf_vim_term	plugin/fzf.vim	/^    fun! s:fzf_vim_term()$/;"	f
s:get_color	autoload/fzf/vim.vim	/^    fun! s:get_color(attr, ...)$/;"	f
s:get_git_root	autoload/fzf/vim.vim	/^    fun! s:get_git_root()$/;"	f
s:helptag_sink	autoload/fzf/vim.vim	/^    fun! s:helptag_sink(line)$/;"	f
s:highlight_keys	autoload/fzf/vim.vim	/^    fun! s:highlight_keys(str)$/;"	f
s:history	plugin/fzf.vim	/^fun! s:history(arg, extra, bang)$/;"	f
s:history_sink	autoload/fzf/vim.vim	/^    fun! s:history_sink(type, lines)$/;"	f
s:history_source	autoload/fzf/vim.vim	/^    fun! s:history_source(type)$/;"	f
s:inject_snippet	autoload/fzf/vim.vim	/^    fun! s:inject_snippet(line)$/;"	f
s:is_win	autoload/fzf/vim.vim	/^    let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	autoload/fzf/vim/complete.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	plugin/fzf.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:jump	autoload/fzf/vim.vim	/^    fun! s:jump(t, w)$/;"	f
s:key_sink	autoload/fzf/vim.vim	/^    fun! s:key_sink(line)$/;"	f
s:layout_keys	autoload/fzf/vim.vim	/^    let s:layout_keys = ['window', 'up', 'down', 'left', 'right']$/;"	v
s:line_handler	autoload/fzf/vim.vim	/^    fun! s:line_handler(lines)$/;"	f
s:mark_sink	autoload/fzf/vim.vim	/^    fun! s:mark_sink(lines)$/;"	f
s:merge_opts	autoload/fzf/vim.vim	/^    fun! s:merge_opts(dict, eopts)$/;"	f
s:min_version	autoload/fzf/vim.vim	/^    let s:min_version = '0.9.3'$/;"	v
s:nbs	autoload/fzf/vim.vim	/^    let s:nbs = nr2char(0x2007)$/;"	v
s:open	autoload/fzf/vim.vim	/^    fun! s:open(cmd, target)$/;"	f
s:p	plugin/fzf.vim	/^fun! s:p(bang, ...)$/;"	f
s:pluck	autoload/fzf/vim.vim	/^    fun! s:pluck(dict, key, default)$/;"	f
s:prepend_opts	autoload/fzf/vim.vim	/^    fun! s:prepend_opts(dict, eopts)$/;"	f
s:reduce_line	autoload/fzf/vim/complete.vim	/^function! s:reduce_line(lines)$/;"	f
s:remove_layout	autoload/fzf/vim.vim	/^    fun! s:remove_layout(opts)$/;"	f
s:reverse_list	autoload/fzf/vim.vim	/^    fun! s:reverse_list(opts)$/;"	f
s:search_history_sink	autoload/fzf/vim.vim	/^    fun! s:search_history_sink(lines)$/;"	f
s:shortpath	autoload/fzf/vim.vim	/^    fun! s:shortpath()$/;"	f
s:sort_buffers	autoload/fzf/vim.vim	/^    fun! s:sort_buffers(...)$/;"	f
s:strip	autoload/fzf/vim.vim	/^    fun! s:strip(str)$/;"	f
s:tags_sink	autoload/fzf/vim.vim	/^    fun! s:tags_sink(lines)$/;"	f
s:version_requirement	autoload/fzf/vim.vim	/^    fun! s:version_requirement(val, min)$/;"	f
s:warn	autoload/fzf/vim.vim	/^    fun! s:warn(message)$/;"	f
s:warned	autoload/fzf/vim.vim	/^    let s:warned = 0$/;"	v
s:wide	autoload/fzf/vim.vim	/^    let s:wide = 120$/;"	v
s:windows_sink	autoload/fzf/vim.vim	/^    fun! s:windows_sink(line)$/;"	f
s:wrap	autoload/fzf/vim.vim	/^    fun! s:wrap(name, opts, bang)$/;"	f
s:yank_to_register	autoload/fzf/vim.vim	/^    fun! s:yank_to_register(data)$/;"	f
wrapped.newsink	autoload/fzf/vim.vim	/^        fun! wrapped.newsink(lines)$/;"	f
